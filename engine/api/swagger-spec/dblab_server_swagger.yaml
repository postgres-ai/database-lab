swagger: "2.0"
info:
  description: "This page provides the OpenAPI specification for the Database Lab (DBLab) API, previously recognized as the DLE API (Database Lab Engine API)."
  version: "4.0.0-alpha.5"
  title: "DBLab API v4.0"
  contact:
    email: "team@postgres.ai"
  license:
    name: "DBLab v4.0 uses Apache Licence Version 2.0"
    url: "https://gitlab.com/postgres-ai/database-lab/blob/dle-4-0/LICENSE"
basePath: "/"
tags:
  - name: "DBLab"
    description: "DBLab API Reference"
    externalDocs:
      description: "DBLab Docs"
      url: "https://postgres.ai/docs/database-lab"
schemes:
  - "https"
  - "http"

paths:
  /status:
    get:
      tags:
        - "instance"
      summary: "Get the status of the instance"
      description: ""
      operationId: "getInstanceStatus"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: header
          name: Verification-Token
          type: string
          required: true
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Instance"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/Error"

  /snapshots:
    get:
      tags:
        - "instance"
      summary: "Retrieve a list of snapshots"
      description: ""
      operationId: "getSnapshots"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: header
          name: Verification-Token
          type: string
          required: true
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Snapshot"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/Error"

  /clones:
    get:
      tags:
        - "clone"
      description: Retrieve a list of clones
      parameters:
        - in: header
          name: Verification-Token
          type: string
          required: true
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Clone"

  /clone:
    post:
      tags:
        - "clone"
      summary: "Create a clone"
      description: ""
      operationId: "createClone"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: header
          name: Verification-Token
          type: string
          required: true
        - in: body
          name: body
          description: "Clone object"
          required: true
          schema:
            $ref: '#/definitions/CreateClone'
      responses:
        201:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Clone"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/Error"

  /clone/{id}:
    get:
      tags:
        - "clone"
      summary: "Get a clone status"
      description: ""
      operationId: "getClone"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: header
          name: Verification-Token
          type: string
          required: true
        - in: path
          required: true
          name: "id"
          type: "string"
          description: "Clone ID"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Clone"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/Error"

    patch:
      tags:
        - "clone"
      summary: "Update a clone"
      description: ""
      operationId: "patchClone"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: header
          name: Verification-Token
          type: string
          required: true
        - in: path
          required: true
          name: "id"
          type: "string"
          description: "Clone ID"
        - in: body
          name: body
          description: "Clone object"
          required: true
          schema:
            $ref: '#/definitions/UpdateClone'
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Clone"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/Error"

    delete:
      tags:
        - "clone"
      summary: "Delete a clone"
      description: ""
      operationId: "destroyClone"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: header
          name: Verification-Token
          type: string
          required: true
        - in: path
          required: true
          name: "id"
          type: "string"
          description: "Clone ID"
      responses:
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/Error"

  /clone/{id}/reset:
    post:
      tags:
        - "clone"
      summary: "Reset a clone"
      description: ""
      operationId: "resetClone"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: header
          name: Verification-Token
          type: string
          required: true
        - in: path
          required: true
          name: "id"
          type: "string"
          description: "Clone ID"
        - in: body
          name: body
          description: "Reset object"
          required: false
          schema:
            $ref: '#/definitions/ResetClone'
      responses:
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/Error"

  /observation/start:
    post:
      tags:
        - "observation"
      summary: "Start an observation session"
      description: ""
      operationId: "startObservation"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: header
          name: Verification-Token
          type: string
          required: true
        - in: body
          name: body
          description: "Start observation object"
          required: true
          schema:
            $ref: '#/definitions/StartObservationRequest'
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/ObservationSession"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/Error"

  /observation/stop:
    post:
      tags:
        - "observation"
      summary: "Stop the observation session"
      description: ""
      operationId: "stopObservation"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: header
          name: Verification-Token
          type: string
          required: true
        - in: body
          name: body
          description: "Stop observation object"
          required: true
          schema:
            $ref: '#/definitions/StopObservationRequest'
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/ObservationSession"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/Error"

  /observation/summary/{clone_id}/{session_id}:
    get:
      tags:
        - "observation"
      summary: "Get the observation summary info"
      description: ""
      operationId: "summaryObservation"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: header
          name: Verification-Token
          type: string
          required: true
        - in: path
          required: true
          name: "clone_id"
          type: "string"
          description: "Clone ID"
        - in: path
          required: true
          name: "session_id"
          type: "string"
          description: "Session ID"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/ObservationSummaryArtifact"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/Error"

  /observation/download:
    get:
      tags:
        - "observation"
      summary: "Download the observation artifact"
      description: ""
      operationId: "downloadObservationArtifact"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: header
          name: Verification-Token
          type: string
          required: true
        - in: path
          required: true
          name: "artifact_type"
          type: "string"
          description: "Type of the requested artifact"
        - in: path
          required: true
          name: "clone_id"
          type: "string"
          description: "Clone ID"
        - in: path
          required: true
          name: "session_id"
          type: "string"
          description: "Session ID"
      responses:
        200:
          description: "Successful operation"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/Error"

  /instance/retrieval:
    get:
      tags:
        - "instance"
      summary: "Report state of retrieval subsystem"
      description: ""
      operationId: "instanceRetrieval"
      produces:
        - "application/json"
      parameters:
        - in: header
          name: Verification-Token
          type: string
          required: true
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Retrieving"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/Error"

  /healthz:
    get:
      tags:
        - "instance"
      summary: "Get the state of the instance we are working with"
      description: ""
      operationId: "healthCheck"
      produces:
        - "application/json"
      parameters:
        - in: header
          name: Verification-Token
          type: string
          required: true
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Engine"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/Error"


  /admin/config:
    post:
      tags:
        - "config"
      summary: "Set instance configuration"
      description: ""
      operationId: "setConfig"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: header
          name: Verification-Token
          type: string
          required: true
        - in: body
          name: body
          description: "Set configuration object"
          required: true
          schema:
            $ref: '#/definitions/Config'
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Config"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - "config"
      summary: "Get instance configuration"
      description: ""
      operationId: "getConfig"
      produces:
        - "application/json"
      parameters:
        - in: header
          name: Verification-Token
          type: string
          required: true
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Config"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/Error"

  /admin/config.yaml:
    get:
      tags:
        - "config"
      summary: "Get the config of the instance"
      description: ""
      operationId: "getConfigYaml"
      produces:
        - "application/yaml"
      parameters:
        - in: header
          name: Verification-Token
          type: string
          required: true
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Config"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/Error"

  /admin/test-db-source:
    post:
      tags:
        - "config"
      summary: "Test source database"
      description: ""
      operationId: "testDBConnection"
      consumes:
        - "application/json"
      parameters:
        - in: header
          name: Verification-Token
          type: string
          required: true
        - in: body
          name: body
          description: "Connection DB object"
          required: true
          schema:
            $ref: '#/definitions/Connection'
      responses:
        200:
          description: "Successful operation"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/Error"

  /admin/ws-auth:
    post:
      tags:
        - "config"
      summary: "Test source database"
      description: ""
      operationId: "testDBConnection"
      consumes:
        - "application/json"
      parameters:
        - in: header
          name: Verification-Token
          type: string
          required: true
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/WSToken"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/Error"

  /branches:
    get:
      tags:
        - "branch"
      description: Retrieve a list of branches
      parameters:
        - in: header
          name: Verification-Token
          type: string
          required: true
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Branch"

  /branch/snapshot/{id}:
    get:
      description: Retrieves information about the specified branch
      parameters:
        - name: id
          in: path
          description: ID of the branch snapshot
          required: true
          type: string
        - in: header
          name: Verification-Token
          type: string
          required: true
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/SnapshotDetails"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/Error"

  /branch/create:
    post:
      tags:
        - "branch"
      description: Create a new branch
      parameters:
        - in: header
          name: Verification-Token
          type: string
          required: true
        - name: body
          in: body
          description: "Parameters required for branch creation: `branchName` – the name of the new branch; `baseBranch` –  the name of the parent branch used for branch creation, or `snapshotID` – the snapshot ID used for branch creation"
          required: true
          schema:
            type: object
            properties:
              branchName:
                type: string
              baseBranch:
                type: string
              snapshotID:
                type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              name:
                type: string
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/Error"

  /branch/snapshot:
    post:
      tags:
        - "branch"
      description: Create a new snapshot for the specified clone
      parameters:
        - in: header
          name: Verification-Token
          type: string
          required: true
        - name: body
          in: body
          description: "Parameters necessary for snapshot creation: `cloneID` – the ID of the clone, `message` – description of the snapshot"
          required: true
          schema:
            type: object
            properties:
              cloneID:
                type: string
              message:
                type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              snapshotID:
                type: string
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/Error"

  /branch/delete:
    post:
      tags:
        - "branch"
      description: Delete the specified branch
      parameters:
        - in: header
          name: Verification-Token
          type: string
          required: true
        - name: body
          in: body
          description: "Parameters required for branch deletion: `branchName` – the name of the branch to be deleted"
          required: true
          schema:
            type: object
            properties:
              branchName:
                type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ResponseStatus"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/Error"

  /branch/log:
    post:
      tags:
        - "branch"
      description: Retrieve a log of a given branch
      parameters:
        - in: header
          name: Verification-Token
          type: string
          required: true
        - name: body
          in: body
          description: "Parameters required to access the log of the given branch: `branchName` – the name of the branch
          required: false
          schema:
            type: object
            properties:
              branchName:
                type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/SnapshotDetails"

definitions:
  Instance:
    type: "object"
    properties:
      status:
        $ref: "#/definitions/Status"
      engine:
        $ref: "#/definitions/Engine"
      pools:
        type: "array"
        items:
          $ref: "#/definitions/PoolEntry"
      cloning:
        $ref: "#/definitions/Cloning"
      retrieving:
        $ref: "#/definitions/Retrieving"
      provisioner:
        $ref: "#/definitions/Provisioner"
      synchronization:
        $ref: "#/definitions/Synchronization"

  Status:
    type: "object"
    required:
      - "code"
      - "message"
    properties:
      code:
        type: "string"
        description: "Status code"
      message:
        type: "string"
        description: "Status description"

  Engine:
    type: "object"
    properties:
      version:
        type: "string"
      edition:
        type: "string"
      startedAt:
        type: "string"
        format: "date-time"
      telemetry:
        type: boolean
      disableConfigModification:
        type: boolean

  PoolEntry:
    type: "object"
    properties:
      name:
        type: "string"
      mode:
        type: "string"
      dataStateAt:
        type: "string"
        format: "date-time"
      status:
        type: "string"
      cloneList:
        type: "array"
        items:
          type: "string"
      fileSystem:
        $ref: "#/definitions/FileSystem"

  FileSystem:
    type: "object"
    properties:
      mode:
        type: "string"
      free:
        type: "integer"
        format: "int64"
      size:
        type: "integer"
        format: "int64"
      used:
        type: "integer"
        format: "int64"
      dataSize:
        type: "integer"
        format: "int64"
      usedBySnapshots:
        type: "integer"
        format: "int64"
      usedByClones:
        type: "integer"
        format: "int64"
      compressRatio:
        type: "integer"
        format: "float64"

  Cloning:
    type: "object"
    properties:
      expectedCloningTime:
        type: "integer"
        format: "float64"
      numClones:
        type: "integer"
        format: "int64"
      clones:
        type: "array"
        items:
          $ref: "#/definitions/Clone"

  Retrieving:
    type: "object"
    properties:
      mode:
        type: "string"
      status:
        type: "string"
      lastRefresh:
        type: "string"
        format: "date-time"
      nextRefresh:
        type: "string"
        format: "date-time"
      activity:
        $ref: "#/definitions/Activity"

  Activity:
    type: "object"
    properties:
      source:
        type: "array"
        items:
          $ref: "#/definitions/PGActivityEvent"
      target:
        type: "array"
        items:
          $ref: "#/definitions/PGActivityEvent"

  PGActivityEvent:
    type: "object"
    properties:
      user:
        type: "string"
      query:
        type: "string"
      duration:
        type: "number"
      waitEventType:
        type: "string"
      waitEvent:
        type: "string"

  Provisioner:
    type: "object"
    properties:
      dockerImage:
        type: "string"
      containerConfig:
        type: "object"

  Synchronization:
    type: "object"
    properties:
      status:
        $ref: "#/definitions/Status"
      startedAt:
        type: "string"
        format: "date-time"
      lastReplayedLsn:
        type: "string"
      lastReplayedLsnAt:
        type: "string"
        format: "date-time"
      replicationLag:
        type: "string"
      replicationUptime:
        type: "integer"

  Snapshot:
    type: "object"
    properties:
      id:
        type: "string"
      createdAt:
        type: "string"
        format: "date-time"
      dataStateAt:
        type: "string"
        format: "date-time"
      physicalSize:
        type: "integer"
        format: "int64"
      logicalSize:
        type: "integer"
        format: "int64"
      pool:
        type: "string"
      numClones:
        type: "integer"
        format: "int"

  Database:
    type: "object"
    properties:
      connStr:
        type: "string"
      host:
        type: "string"
      port:
        type: "string"
      username:
        type: "string"
      password:
        type: "string"

  Clone:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      snapshot:
        $ref: "#/definitions/Snapshot"
      protected:
        type: "boolean"
        default: false
      deleteAt:
        type: "string"
        format: "date-time"
      createdAt:
        type: "string"
        format: "date-time"
      status:
        $ref: "#/definitions/Status"
      db:
        $ref: "#/definitions/Database"
      metadata:
        $ref: "#/definitions/CloneMetadata"

  CloneMetadata:
    type: "object"
    properties:
      cloneDiffSize:
        type: "integer"
        format: "int64"
      logicalSize:
        type: "integer"
        format: "int64"
      cloningTime:
        type: "integer"
        format: "float64"
      maxIdleMinutes:
        type: "integer"
        format: "int64"

  CreateClone:
    type: "object"
    properties:
      id:
        type: "string"
      snapshot:
        type: "object"
        properties:
          id:
            type: "string"
      protected:
        type: "boolean"
        default: false
      db:
        type: "object"
        properties:
          username:
            type: "string"
          password:
            type: "string"
          restricted:
            type: "boolean"
            default: false
          db_name:
            type: "string"

  ResetClone:
    type: "object"
    description: "Object defining specific snapshot used when resetting clone. Optional parameters `latest` and `snapshotID` must not be specified together"
    properties:
      snapshotID:
        type: "string"
      latest:
        type: "boolean"
        default: false

  UpdateClone:
    type: "object"
    properties:
      protected:
        type: "boolean"
        default: false

  StartObservationRequest:
    type: "object"
    properties:
      clone_id:
        type: "string"
      config:
        $ref: "#/definitions/ObservationConfig"
      tags:
        type: "object"
      db_name:
        type: "string"

  ObservationConfig:
    type: "object"
    properties:
      observation_interval:
        type: "integer"
        format: "int64"
      max_lock_duration:
        type: "integer"
        format: "int64"
      max_duration:
        type: "integer"
        format: "int64"

  ObservationSession:
    type: "object"
    properties:
      session_id:
        type: "integer"
        format: "int64"
      started_at:
        type: "string"
        format: "date-time"
      finished_at:
        type: "string"
        format: "date-time"
      config:
        $ref: "#/definitions/ObservationConfig"
      tags:
        type: "object"
      artifacts:
        type: array
        items:
          type: string
      result:
        $ref: "#/definitions/ObservationResult"

  ObservationResult:
    type: "object"
    properties:
      status:
        type: "string"
      intervals:
        type: array
        items:
          $ref: "#/definitions/ObservationInterval"
      summary:
        $ref: "#/definitions/ObservationSummary"

  ObservationInterval:
    type: "object"
    properties:
      started_at:
        type: "string"
        format: "date-time"
      duration:
        type: "integer"
        format: "int64"
      warning:
        type: string

  ObservationSummary:
    type: "object"
    properties:
      total_duration:
        type: "integer"
        format: "float64"
      total_intervals:
        type: "integer"
        format: "int"
      warning_intervals:
        type: "integer"
        format: "int"
      checklist:
        $ref: "#/definitions/ObservationChecklist"

  ObservationChecklist:
    type: "object"
    properties:
      overall_success:
        type: boolean
      session_duration_acceptable:
        type: boolean
      no_long_dangerous_locks:
        type: boolean

  StopObservationRequest:
    type: "object"
    properties:
      clone_id:
        type: "string"
      overall_error:
        type: "boolean"

  SummaryObservationRequest:
    type: "object"
    properties:
      clone_id:
        type: "string"
      session_id:
        type: "string"

  ObservationSummaryArtifact:
    type: "object"
    properties:
      session_id:
        type: "integer"
        format: "int64"
      clone_id:
        type: "string"
      duration:
        type: "object"
      db_size:
        type: "object"
      locks:
        type: "object"
      log_errors:
        type: "object"
      artifact_types:
        type: "array"
        items:
          type: "string"

  Error:
    type: "object"
    properties:
      code:
        type: "string"
      message:
        type: "string"
      detail:
        type: "string"
      hint:
        type: "string"

  ResponseStatus:
    type: "object"
    properties:
      status:
        type: "string"
      message:
        type: "string"

  Config:
    type: object

  Connection:
    type: "object"
    properties:
      host:
        type: "string"
      port:
        type: "string"
      dbname:
        type: "string"
      username:
        type: "string"
      password:
        type: "string"
      db_list:
        type: "array"
        items:
          type: "string"

  WSToken:
    type: "object"
    properties:
      token:
        type: "string"
        description: "WebSocket token"

  Branch:
    type: object
    properties:
      name:
        type: string
      parent:
        type: string
      dataStateAt:
        type: string
        format: date-time
      snapshotID:
        type: string

  SnapshotDetails:
    type: object
    properties:
      id:
        type: string
      parent:
        type: string
      child:
        type: string
      branch:
        type: array
        items:
          type: string
      root:
        type: string
      dataStateAt:
        type: string
        format: date-time
      message:
        type: string


externalDocs:
  description: "DBLab Docs"
  url: "https://gitlab.com/postgres-ai/docs/tree/master/docs/database-lab"
